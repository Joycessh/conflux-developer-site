(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{166:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return d})),t.d(n,"default",(function(){return u}));var r=t(1),o=t(9),c=(t(0),t(192)),a={id:"shuttleflow_backend_sdk",title:"Conflux Shuttleflow SDK",custom_edit_url:"https://github.com/Conflux-Dev/conflux-dex-sdk/edit/master/crosschain/README.md",keywords:["crosschain","shuttleflow sdk"]},s={id:"conflux-dex-sdk/crosschain/shuttleflow_backend_sdk",title:"Conflux Shuttleflow SDK",description:"Conflux Shuttleflow SDK",source:"@site/docs/conflux-dex-sdk/crosschain/README.md",permalink:"/docs/conflux-dex-sdk/crosschain/shuttleflow_backend_sdk",editUrl:"https://github.com/Conflux-Dev/conflux-dex-sdk/edit/master/crosschain/README.md",lastUpdatedBy:"ConfluxBot",lastUpdatedAt:1586243264,sidebar:"docs",previous:{title:"Conflux Boomflow SDK",permalink:"/docs/conflux-dex-sdk/boomflow/boomflow_backend_sdk"},next:{title:"Conflux Matchflow",permalink:"/docs/conflux-dex/matchflow"}},d=[{value:"Functions",id:"functions",children:[]},{value:"Const parameters for test",id:"const-parameters-for-test",children:[]},{value:"Examples",id:"examples",children:[]}],i={rightToc:d};function u(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},i,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"conflux-shuttleflow-sdk"},"Conflux Shuttleflow SDK"),Object(c.b)("h2",{id:"functions"},"Functions"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{}),'// get ethereum receive wallet address (used for both eth & usdt) of user.\n// when user send money to receive wallet, custodian will directly deposit the \n// money to conflux dex.\n// user_address: conflux address of user\n// node_url: url of running crosschain custodian node\nasync function getUserReceiveWalletEth(user_address, node_url);\n\n// get bitcoin receive wallet address (used for both eth & usdt) of user.\n// when user send money to receive wallet, custodian will directly deposit the \n// money to conflux dex.\n// user_address: conflux address of user\n// node_url: url of running crosschain custodian node\nasync function getUserReceiveWalletBtc(user_address, node_url);\n\n// burn request are processed by dex CRC-L and is deprecated in this sdk.\n\n// get user mint/burn operation list.\n// data: JSON object\n// {\n//    address: (String) user conflux address,\n//    types: (array of String) subset of {"eth_mint", "eth_burn", "erc20_mint", "erc20_burn", "btc_mint", "btc_burn"},\n//    status: (array of String) subset of {"doing", "finished"},\n// }\n// skip: the number of leading results to be ignored\n// cnt: the maximum number of results to return\n// node_url: url of running crosschain custodian node\nasync function getUserOperationList(data, skip, cnt, node_url);\n')),Object(c.b)("h2",{id:"const-parameters-for-test"},"Const parameters for test"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{}),"crosschain.test_conf = {\n  usdt_addr: // usdt address on rinkeby testnet,\n  node_url: // custodian node url,\n};\n")),Object(c.b)("h2",{id:"examples"},"Examples"),Object(c.b)("p",null,"Import crosschain module."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{}),"const crosschain = require('crosschain');\nconst test_conf = crosschain.test_conf;\n")),Object(c.b)("p",null,"get receive wallet address of a user:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{}),"let receive_wallet = crosschain.getUserReceiveWalletEth(\n    '0x6B6C3A1eC5C689C3dd158b1a6E8Bc722373a2BfA', \n    test_conf.node_url\n);\n\n// send eth to receive_wallet, custodian will mint cETH for users and then transfer them to CRC-L.\n// user's cETH will be locked in the address of CRC-L of cETH.\n")),Object(c.b)("p",null,"get user operation list:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{}),"crosschain.getUserOperationList({\n  address: '0x65cf2b2c91e6eff901f10ab7363ae58cf1bfccc5',// for example\n  types: ['eth_mint', 'eth_burn', 'erc20_mint'],\n  status: ['finished', 'doing'],\n}, 0, 100, test_conf.node_url).then(console.log);\n\n/*\n{ txs:\n   [ { type: 'eth_mint',\n       nonce_or_txid:\n        '0xacf0ae864689f19789ea43cdc3daf0fa41fdeb5392dfe5291c6aab1a4b6c128b',\n       amount: '1000000000000000',\n       user_addr: '0x65CF2b2c91e6eff901F10ab7363ae58cf1bfCCc5',\n       to_addr: '0x65CF2b2c91e6eff901F10ab7363ae58cf1bfCCc5',\n       signer: [ 'fafa' ],\n       has_signed: true,\n       need: 2,\n       status: 'doing' },\n     { type: 'cUSDT_mint',\n       nonce_or_txid:\n        '0x6eb599af3ab6242260dada6f6b57dad91faa64518d7cf1ac4a975f7f718a8b29',\n       amount: '100000',\n       user_addr: '0x65cf2b2c91e6eff901f10ab7363ae58cf1bfccc5',\n       to_addr: '0x65cf2b2c91e6eff901f10ab7363ae58cf1bfccc5',\n       status: 'finished' },\n     { type: 'cUSDT_mint',\n       nonce_or_txid:\n        '0x490ae855b02c50d57eafd96351359e21bc689a1385443f33a764121f22b84b2b',\n       amount: '100000',\n       user_addr: '0x65cf2b2c91e6eff901f10ab7363ae58cf1bfccc5',\n       to_addr: '0x65cf2b2c91e6eff901f10ab7363ae58cf1bfccc5',\n       status: 'finished' } ],\n  total: 3 }\n*/\n")))}u.isMDXComponent=!0},192:function(e,n,t){"use strict";t.d(n,"a",(function(){return l})),t.d(n,"b",(function(){return p}));var r=t(0),o=t.n(r);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=o.a.createContext({}),u=function(e){var n=o.a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s({},n,{},e)),t},l=function(e){var n=u(e.components);return o.a.createElement(i.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},b=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,c=e.originalType,a=e.parentName,i=d(e,["components","mdxType","originalType","parentName"]),l=u(t),b=r,p=l["".concat(a,".").concat(b)]||l[b]||f[b]||c;return t?o.a.createElement(p,s({ref:n},i,{components:t})):o.a.createElement(p,s({ref:n},i))}));function p(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var c=t.length,a=new Array(c);a[0]=b;var s={};for(var d in n)hasOwnProperty.call(n,d)&&(s[d]=n[d]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var i=2;i<c;i++)a[i]=t[i];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);