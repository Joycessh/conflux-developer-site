(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{185:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(1),r=n(9),o=(n(0),n(190)),i={id:"signing_data_with_portal",title:"Signing Data with Conflux Portal",custom_edit_url:"https://github.com/Conflux-Chain/conflux-portal-docs/edit/master/docs/en/portal/API_Reference/Signing_Data/Introduction.md"},s={id:"conflux-portal/docs/en/portal/API_Reference/Signing_Data/signing_data_with_portal",title:"Signing Data with Conflux Portal",description:"If you'd like to jump to some working signature examples, [you can visit this",source:"@site/docs/conflux-portal/docs/en/portal/API_Reference/Signing_Data/Introduction.md",permalink:"/docs/conflux-portal/docs/en/portal/API_Reference/Signing_Data/signing_data_with_portal",editUrl:"https://github.com/Conflux-Chain/conflux-portal-docs/edit/master/docs/en/portal/API_Reference/Signing_Data/Introduction.md",lastUpdatedBy:"yqrashawn",lastUpdatedAt:1584670766},c=[{value:"A Brief History",id:"a-brief-history",children:[]}],l={rightToc:c};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"If you'd like to jump to some working signature examples, ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"http://13.57.190.119:9000/contract.html"}),"you can visit this\nwebsite")," and download the code of the\npage. "),Object(o.b)("p",null,"If you'd like to read Metamask's JavaScript implementations of these methods,\nthey are all available in the npm package\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/MetaMask/eth-sig-util"}),"eth-sig-util"),".  "),Object(o.b)("h2",{id:"a-brief-history"},"A Brief History"),Object(o.b)("p",null,"There are currently five signing methods in Conflux Portal, and you might wonder\nthe history of these methods. Studying the history of these methods has some\nlessons in it for the emergent lessons of decentralized standards emergence. Our\ncurrent five methods are: "),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/conflux-portal/docs/en/portal/API_Reference/Signing_Data/cfx_sign"}),Object(o.b)("inlineCode",{parentName:"a"},"cfx_sign"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/conflux-portal/docs/en/portal/API_Reference/Signing_Data/personal_sign"}),Object(o.b)("inlineCode",{parentName:"a"},"personal_sign"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/conflux-portal/docs/en/portal/API_Reference/Signing_Data/sign_typed_data_v1"}),Object(o.b)("inlineCode",{parentName:"a"},"signTypedData"))," (currently identical to ",Object(o.b)("inlineCode",{parentName:"li"},"signTypedData_v1"),")"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/conflux-portal/docs/en/portal/API_Reference/Signing_Data/sign_typed_data_v1"}),Object(o.b)("inlineCode",{parentName:"a"},"signTypedData_v1"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/conflux-portal/docs/en/portal/API_Reference/Signing_Data/sign_typed_data_v3"}),Object(o.b)("inlineCode",{parentName:"a"},"signTypedData_v3")))),Object(o.b)("p",null,"There are likely to be many more over time. When MetMask first started, the\nProvider API wasn't designed to be exposed to untrusted websites, and so some\nconsiderations weren't taken as seriously as they were later. "),Object(o.b)("p",null,"In particular, the method ",Object(o.b)("inlineCode",{parentName:"p"},"cfx_sign"),"(",Object(o.b)("inlineCode",{parentName:"p"},"eth_sign")," in Metamask) is an open-ended\nsigning method that allows signing an arbitrary hash, which means it can be used\nto sign transactions, or any other data, making it a dangerous phishing risk.\nFor this reason, Metamask makes this method show the most frightening possible\nmessage to the user, and generally discourage using this method in production.\nHowever, some applications (usually admin panels internal to teams) use this\nmethod for the sake of its ease of use, and so Metamask have continued to\nsupport it for the sake of not breaking the workflows of active projects.   "),Object(o.b)("p",null,"Eventually, the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/ethereum/go-ethereum/pull/2940"}),Object(o.b)("inlineCode",{parentName:"a"},"personal_sign"),"\nspec")," was proposed, which added\na prefix to the data so it could not impersonate transactions. Metamask also\nmade this method able to display human readable text when UTF-8 encoded, making\nit a popular choice for site logins.  "),Object(o.b)("p",null,"However, the text-prefix made those signatures expensive to verify on-chain, and\nso with the help of the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://0xproject.com/"}),"0xProtocol")," team and\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://spankchain.com/"}),"SpankChain"),", the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://eips.ethereum.org/EIPS/eip-712"}),"EIP\n712")," spec was written. "),Object(o.b)("p",null,"The strange part of EIP 712, and this decentralized standards ecosystem, is that\nthe proposal changed several times while retaining the same EIP. This means what\nMetamask initially implemented as ",Object(o.b)("inlineCode",{parentName:"p"},"signTypedData")," was the earliest proposed\nversion, while other groups implemented later versions under the same method\nname.  "),Object(o.b)("p",null,"To avoid compatibility issues between clients, we recommend using the\nhard-versioned method names ",Object(o.b)("inlineCode",{parentName:"p"},"signTypedData_v1")," and ",Object(o.b)("inlineCode",{parentName:"p"},"signTypedData_v3"),". The\nmissing ",Object(o.b)("inlineCode",{parentName:"p"},"v2")," represents an intermediary design that was implemented by the\nCipher browser, so that we have room to implement it if there is ever enough\ndeveloper demand for it. "),Object(o.b)("p",null,"In the future, it may help to have method names include a hash of their exact\nproposal, since in a decentralized ecosystem, there is no absolute source of\ntruth of what a given name should map to. Instead, we are forced to invent new\npatterns of collaboration, where we can drive forward and innovate, while\nsimultaneously avoiding creating a brittle ecosystem by changing our meanings\nout from under the words. "))}p.isMDXComponent=!0},190:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},d=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,m=d["".concat(i,".").concat(u)]||d[u]||h[u]||o;return n?r.a.createElement(m,s({ref:t},l,{components:n})):r.a.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);