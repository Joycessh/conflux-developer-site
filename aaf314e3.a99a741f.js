(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{180:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return i})),n.d(t,"default",(function(){return c}));var o=n(1),r=n(9),a=(n(0),n(202)),s={id:"experimental_api",title:"Experimental APIs",custom_edit_url:"https://github.com/Conflux-Chain/conflux-portal-docs/edit/master/docs/en/portal/API_Reference/Experimental_APIs.md"},i={id:"conflux-portal/docs/en/portal/API_Reference/experimental_api",title:"Experimental APIs",description:"## wallet_watchAsset",source:"@site/docs/conflux-portal/docs/en/portal/API_Reference/Experimental_APIs.md",permalink:"/docs/conflux-portal/docs/en/portal/API_Reference/experimental_api",editUrl:"https://github.com/Conflux-Chain/conflux-portal-docs/edit/master/docs/en/portal/API_Reference/Experimental_APIs.md",lastUpdatedBy:"yqrashawn",lastUpdatedAt:1585033639},l={};function c(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"user-content-wallet_watchasset"},"wallet_watchAsset"),Object(a.b)("p",null,"Most all Conflux wallets display some set of tokens, usually from a centrally\ncurated registry of tokens. "),Object(a.b)("p",null,"At Conflux Portal, we believe the future of tokens has the potential to be much\nbigger than any one party can curate, and we want to enable this explosion of\ncreativity.  "),Object(a.b)("p",null,"In support of this goal, we have implemented support for ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/estebanmino/EIPs/blob/master/EIPS/eip-747.md"}),"EIP\n747"),", which\nprovides a way for your site to suggest a token that a user might want to track\nin their wallet. "),Object(a.b)("p",null,"The code is simple:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},'conflux.sendAsync({\n    method: \'metamask_watchAsset\',\n    params: {\n        "type":"ERC20", // Initially only supports ERC20, but eventually more!\n        "options":{\n            "address": tokenAddress, // The address that the token is at.\n            "symbol": tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n            "decimals": tokenDecimals, // The number of decimals in the token\n            "image": tokenImage, // A string url of the token logo\n        },\n    },\n    id: Math.round(Math.random() * 100000),\n}, (err, addedBoolean) => {\n\n})\n')),Object(a.b)("p",null,"We even created a sample Dapp so developers could suggest their tokens to users\nwith a simple hyperlink, without a line of code. ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/MetaMask/Add-Token"}),"Visit it\nhere"),". "),Object(a.b)("h2",{id:"user-content-conflux_metamask"},"conflux._metamask"),Object(a.b)("p",null,"Conflux Portal supports the standard Conflux Provider API as defined in both\n",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/conflux/EIPs/blob/master/EIPS/eip-1193.md"}),"EIP-1193")," and\n",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/conflux/EIPs/blob/master/EIPS/eip-1102.md"}),"EIP-1102"),". In\naddition to ","conflux.enable()"," and its RPC equivalent\n","conflux.send('cfx_requestAccounts')",", Conflux Portal also exposes a collection\nof nonstandard convenience methods on the provider object at\n","conflux._metamask",". ",Object(a.b)("strong",{parentName:"p"},"Using these methods is dangerous")," since other dapp\nbrowsers may or may not implement them; for this reason, these methods are\nintentionally kept at a Conflux Portal specific namespace to avoid confusion with\nstandard provider functionality. "),Object(a.b)("p",null,"Each method and its intended use is described below."),Object(a.b)("h3",{id:"user-content-conflux_metamaskisenabled---boolean-to-be-removed"},"conflux._metamask.isEnabled: () => boolean"," (To Be Removed)"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Note:")," This will be removed in ",Object(a.b)("strong",{parentName:"p"},"Q1 2020"),"."),Object(a.b)("p",null,"This method returns a ","boolean"," indicating if the current domain has access to\nuser accounts. This is useful for determining if a user has approved account\naccess for the current session. "),Object(a.b)("h3",{id:"user-content-conflux_metamaskisapproved---promiseboolean-to-be-removed"},"conflux._metamask.isApproved: () => Promise<boolean>"," (To Be Removed)"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Note:")," This will be removed in ",Object(a.b)("strong",{parentName:"p"},"Q1 2020"),"."),Object(a.b)("p",null,"This method returns a ","Promise"," that resolves to a ","Boolean"," indicating if the\ncurrent domain has a cached approval. This is useful for determining if an\napproval popup will show when ","conflux.enable()"," is called, since it indicates\nif a past approval exists. "),Object(a.b)("h3",{id:"user-content-conflux_metamaskisunlocked---promiseboolean"},"conflux._metamask.isUnlocked: () => Promise<boolean>"),Object(a.b)("p",null,"This method returns a ","Promise"," that resolves to a ","Boolean"," indicating if\nConflux Portal is unlocked by the user. This is useful for knowing if\nConflux Portal is unlocked in order to provide meaningful instructions to the\nuser during onboarding. Note that this does not indicate if a user has approved\naccount exposure. "))}c.isMDXComponent=!0},202:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return b}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},u=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(o.forwardRef)((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,b=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?r.a.createElement(b,i({ref:t},c,{components:n})):r.a.createElement(b,i({ref:t},c))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);