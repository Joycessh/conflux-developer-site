(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{199:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return b}));var a=t(2),c=t(9),o=(t(0),t(207)),r={},l={id:"js-conflux-sdk/README",title:"README",description:"js-conflux-sdk",source:"@site/docs/js-conflux-sdk/README.md",permalink:"/docs/js-conflux-sdk/README",editUrl:"https://github.com/Conflux-Chain/conflux-developer-site/edit/master/docs/js-conflux-sdk/README.md",lastUpdatedAt:1604905122},s=[{value:"npm",id:"npm",children:[]},{value:"1.0 Key features",id:"10-key-features",children:[]},{value:"Installation",id:"installation",children:[]},{value:"Quick Usage",id:"quick-usage",children:[{value:"Nodejs",id:"nodejs",children:[]},{value:"Frontend",id:"frontend",children:[]}]},{value:"Documentation",id:"documentation",children:[]},{value:"Examples",id:"examples",children:[{value:"Send transaction simple",id:"send-transaction-simple",children:[]},{value:"Send transaction complete",id:"send-transaction-complete",children:[]},{value:"Deploy contract",id:"deploy-contract",children:[]},{value:"Call contract",id:"call-contract",children:[]}]},{value:"Change log",id:"change-log",children:[]},{value:"Conflux Docs",id:"conflux-docs",children:[]},{value:"TODO",id:"todo",children:[]}],i={rightToc:s};function b(e){var n=e.components,t=Object(c.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},i,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"js-conflux-sdk"},"js-conflux-sdk"),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.npmjs.com/package/js-conflux-sdk"}),Object(o.b)("img",Object(a.a)({parentName:"a"},{src:"https://img.shields.io/npm/v/js-conflux-sdk.svg",alt:"npm"})))),Object(o.b)("h2",{id:"npm"},Object(o.b)("a",Object(a.a)({parentName:"h2"},{href:"https://www.npmjs.com/package/js-conflux-sdk"}),Object(o.b)("img",Object(a.a)({parentName:"a"},{src:"https://img.shields.io/npm/dm/js-conflux-sdk.svg",alt:"npm"})))),Object(o.b)("p",null,"JavaScript Conflux Software Development Kit"),Object(o.b)("h2",{id:"10-key-features"},"1.0 Key features"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Add ",Object(o.b)("inlineCode",{parentName:"li"},"cfx.wallet")," to manage multiple accounts, which has replace v0.13's ",Object(o.b)("inlineCode",{parentName:"li"},"cfx.Account"),"."),Object(o.b)("li",{parentName:"ol"},"Add ",Object(o.b)("inlineCode",{parentName:"li"},"cfx.InternalContract(name)")," to interact with Conflux internal contracts."),Object(o.b)("li",{parentName:"ol"},"Add websocket provider, support pub/sub"),Object(o.b)("li",{parentName:"ol"},"Provide ",Object(o.b)("inlineCode",{parentName:"li"},"Drip")," to easily convert unit between CFX, Drip, Gdrip")),Object(o.b)("p",null,"Check the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/js-conflux-sdk/CHANGE_LOG"}),"complete changelog")),Object(o.b)("h2",{id:"installation"},"Installation"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"npm install js-conflux-sdk")),Object(o.b)("h2",{id:"quick-usage"},"Quick Usage"),Object(o.b)("h3",{id:"nodejs"},"Nodejs"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"const { Conflux } = require('js-conflux-sdk');\n\nasync function main() {\n  // initialize a Conflux object\n  const conflux = new Conflux({\n    url: 'http://test.confluxrpc.org',\n    logger: console, // for debug\n  });\n  // get balance\n  const balance = await conflux.getBalance('0x1bd9e9be525ab967e633bcdaeac8bd5723ed4d6b');\n  // Note you should console.log a JSBI's string representation, directly log a JSBI is very ugly.\n  console.log(balance.toString()); // 10098788868004995614504\n}\n\nmain();\n")),Object(o.b)("p",null,"require deep nested file/dir  "),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"const util = require('js-conflux-sdk/src/util');\n")),Object(o.b)("h3",{id:"frontend"},"Frontend"),Object(o.b)("h4",{id:"umd"},"umd"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import { Conflux } from 'js-conflux-sdk/dist/js-conflux-sdk.umd.min.js';\n")),Object(o.b)("p",null,"or if your bundler supports the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.npmjs.com/files/package.json#browser"}),Object(o.b)("inlineCode",{parentName:"a"},"browser")," field")," in ",Object(o.b)("inlineCode",{parentName:"p"},"package.json"),"  "),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import { Conflux } from 'js-conflux-sdk';\n")),Object(o.b)("p",null,"or  "),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<script type="text/javascript" src="node_modules/js-conflux-sdk/dist/js-conflux-sdk.umd.min.js"><\/script>\n<script type="text/javascript">\n  const conflux = new window.Conflux.Conflux({\n    url: \'http://test.confluxrpc.org\',\n    logger: console,\n  });\n<\/script>\n')),Object(o.b)("h2",{id:"documentation"},"Documentation"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/js-conflux-sdk/docs/quick_intro"}),"Quick Intro (Recommend to read)")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/js-conflux-sdk/docs/how_to_send_tx"}),"Complete document for send transaction")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/js-conflux-sdk/docs/interact_with_contract"}),"Interacting with contract")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/Conflux-Chain/js-conflux-sdk/blob/master/api.md"}),"API"))),Object(o.b)("h2",{id:"examples"},"Examples"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/Conflux-Chain/js-conflux-sdk/tree/master/example/0_create_conflux.js"}),"Create conflux instance")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/Conflux-Chain/js-conflux-sdk/tree/master/example/1_account_and_balance.js"}),"Account and balance")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/Conflux-Chain/js-conflux-sdk/tree/master/example/2_send_transaction.js"}),"Send transaction")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/Conflux-Chain/js-conflux-sdk/tree/master/example/3_epoch_block_transaction.js"}),"Query epoch block transaction")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/Conflux-Chain/js-conflux-sdk/tree/master/example/4_contract_deploy_and_call.js"}),"Contract deploy and call")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/Conflux-Chain/js-conflux-sdk/tree/master/example/5_contract_override.js"}),"Contract override"))),Object(o.b)("h3",{id:"send-transaction-simple"},"Send transaction simple"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const { Conflux, Drip } = require(\'js-conflux-sdk\');\n\nasync function main() {\n  const conflux = new Conflux({ url: \'http://test.confluxrpc.org\' });\n  const account = conflux.wallet.addPrivateKey(PRIVATE_KEY); // create account instance and add to wallet\n  \n  const receipt = await conflux.sendTransaction({\n    from: account.address, // sender address which added into conflux.wallet\n    to: ADDRESS, // receiver address\n    value: Drip.fromCFX(0.1), // 0.1 CFX = 100000000000000000 Drip\n  }).executed(); // wait till transaction executed and get receipt\n\n  console.log(receipt); // outcomeStatus 0 means success\n  /*\n    {\n      "index": 0,\n      "epochNumber": 784649,\n      "outcomeStatus": 0,\n      "gasUsed": "21000",\n      "gasFee": "21000000000000",\n      "blockHash": "0xfa7c6d9d0c8ae436f1c9c785a316ac6cc4db16286eede3dd3d5c6a5a22ad5f9e",\n      "contractCreated": null,\n      "from": "0x1bd9e9be525ab967e633bcdaeac8bd5723ed4d6b",\n      "logs": [],\n      "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",\n      "stateRoot": "0x166cbcbfd747505d91237ccd8f849fd6882ad0e6d8b9923ca3c44891cf2b8753",\n      "to": "0x1ead8630345121d19ee3604128e5dc54b36e8ea6",\n      "transactionHash": "0x50cd13d5f97dd867d4ca65e24eb642f6444c07d6af8143018c558df456f11e63"\n    }\n  */\n}\n\nmain();\n')),Object(o.b)("h3",{id:"send-transaction-complete"},"Send transaction complete"),Object(o.b)("p",null,"For the detail explanation of these fields check ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://developer.conflux-chain.org/docs/conflux-doc/docs/send_transaction#installation"}),"official doc"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"const { Conflux, Drip } = require('js-conflux-sdk');\n\nasync function main() {\n  const conflux = new Conflux({ url: 'http://test.confluxrpc.org' });\n  const account = conflux.wallet.addPrivateKey(PRIVATE_KEY); // create account instance and add to wallet\n\n  const estimate = await conflux.estimateGasAndCollateral({ to, value });\n  const status = await conflux.getStatus();\n  \n  const txHash = await conflux.sendTransaction({\n    from: account.address, // or just `from: account` \n    to: ADDRESS,\n    value: Drip.fromGDrip(100), // 100 GDrip = 100000000000 Drip\n    gas: estimate.gasUsed,\n    storageLimit: estimate.storageCollateralized,\n    chainId: status.chainId,\n    data: null,\n    nonce: await conflux.getNextNonce(ADDRESS),\n    gasPrice: await conflux.getGasPrice(),\n    epochHeight: await conflux.getEpochNumber(),  \n  });\n  console.log(txHash);\n  \n  // you might need wait minute here...\n  await new Promise(resolve => setTimeout(resolve, 30*1000));\n  \n  const transaction = await conflux.getTransactionByHash(txHash);\n  console.log(transaction);\n  \n  const receipt = await conflux.getTransactionReceipt(txHash);\n  console.log(receipt);\n}\n\nmain();\n")),Object(o.b)("h3",{id:"deploy-contract"},"Deploy contract"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'const { Conflux } = require(\'js-conflux-sdk\');\nconst { abi, bytecode } = MINI_ERC20; // see https://github.com/Conflux-Chain/js-conflux-sdk/tree/master/example/contract/miniERC20.json\n\nasync function main() {\n  const conflux = new Conflux({ url: \'http://test.confluxrpc.org\' });\n  const account = conflux.wallet.addPrivateKey(PRIVATE_KEY); // create account instance and add to wallet\n  const contract = conflux.Contract({ abi, bytecode });\n\n  const receipt = await contract.constructor(\'MiniERC20\', 18, \'MC\', 10000)\n    .sendTransaction({ from: account })\n    .executed();\n  console.log(receipt);\n  /*\n  {\n    "index": 0,\n    "epochNumber": 318456,\n    "outcomeStatus": 0,\n    "gasUsed": "1054531",\n    "gasFee": "1054531000000000",\n    "blockHash": "0x4a8b07e2694e358af075f7a9e96e78842b77ac2d511e2ab33f6acfff34a5846c",\n    "contractCreated": "0x8a9c270e1a99c05ca90ef0f0008b8f6444cf1a97",\n    "from": "0x1bd9e9be525ab967e633bcdaeac8bd5723ed4d6b",\n    "logs": [],\n    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",\n    "stateRoot": "0x0940d4870e25bae1e7a5e5d7c19411b41922c025aa3de61aea2be17759673b1a",\n    "to": null,\n    "transactionHash": "0x6f55e67b486b5ef0c658c6d50cb5b89a2a2ddfecc1a1f2e414bbbefe36ef8dd5"\n  }\n  */\n\n  // create contract address "0x8a9c270e1a99c05ca90ef0f0008b8f6444cf1a97"\n}\n\nmain();\n')),Object(o.b)("h3",{id:"call-contract"},"Call contract"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"const { Conflux } = require('js-conflux-sdk');\nconst { abi } = MINI_ERC20; // see https://github.com/Conflux-Chain/js-conflux-sdk/tree/master/example/contract/miniERC20.json\n\nasync function main() {\n  const conflux = new Conflux({ url: 'http://test.confluxrpc.org' });\n  const account = conflux.wallet.addPrivateKey(PRIVATE_KEY); // create account instance and add to wallet\n  const contract = conflux.Contract({ abi, address: '0x8a9c270e1a99c05ca90ef0f0008b8f6444cf1a97' });\n\n  const name = await contract.name(); // call method without arguments\n  console.log(name); // MiniERC20\n  // user can set options by `contract.name().call({ from: account, ... })`\n\n  const balance = await contract.balanceOf(account.address); // call method with arguments\n  console.log(balance); // \"10000\" JSBI\n\n  const txHash = await contract.transfer(ADDRESS, 10).sendTransaction({ from: account }); // send method transaction\n  console.log(txHash); // 0xb31eb095b62bed1ef6fee6b7b4ee43d4127e4b42411e95f761b1fdab89780f1a\n  // user can set options by `contract.transfer(ADDRESS, 10).sendTransaction({ from: account, gasPrice: <number>, ... })`\n}\n\nmain();\n")),Object(o.b)("h2",{id:"change-log"},"Change log"),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/Conflux-Chain/js-conflux-sdk/tree/master/CHANGE_LOG.md"}),"see")),Object(o.b)("h2",{id:"conflux-docs"},"Conflux Docs"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://developer.conflux-chain.org/"}),"Official developer documentation")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://developer.conflux-chain.org/docs/conflux-doc/docs/json_rpc"}),"RPC")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://developer.conflux-chain.org/docs/conflux-doc/docs/pubsub"}),"Subscribtion")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://portal.conflux-chain.org/"}),"Conflux Portal"))),Object(o.b)("h2",{id:"todo"},"TODO"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"use native BigInt in node.js, use JSBI in browser."),Object(o.b)("li",{parentName:"ul"},"TODO support ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-23.md"}),"CIP 23"))))}b.isMDXComponent=!0},207:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return f}));var a=t(0),c=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,c=function(e,n){if(null==e)return{};var t,a,c={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(c[t]=e[t]);return c}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var i=c.a.createContext({}),b=function(e){var n=c.a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=b(e.components);return c.a.createElement(i.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return c.a.createElement(c.a.Fragment,{},n)}},p=c.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,r=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),u=b(t),p=a,f=u["".concat(r,".").concat(p)]||u[p]||d[p]||o;return t?c.a.createElement(f,l(l({ref:n},i),{},{components:t})):c.a.createElement(f,l({ref:n},i))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,r=new Array(o);r[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var i=2;i<o;i++)r[i]=t[i];return c.a.createElement.apply(null,r)}return c.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);